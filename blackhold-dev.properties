server.port=30001
spring.application.name=inventory-service
eureka.client.service-url.defaultZone=http://node1:10001/eureka/


product-service.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule


#feign.client.default.connectTimeout=5000
#feign.client.default.readTimeout=5000


#hystrix.command.default.execution.timeout.enabled=true
#hystrix.command."IProductService#getPort()".fallback=true
#hystrix.command."IProductService#getPort()".timeout=true
#hystrix.command."IProductService#getPort()".execution.isolation.thread.timeoutInMilliseconds=1500;
#
#hystrix.command."IProductService#getPort2()".fallback=true
#hystrix.command."IProductService#getPort2()".timeout=true
#hystrix.command."IProductService#getPort2()".execution.isolation.thread.timeoutInMilliseconds=3000;
#
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=3000

# 开启feign.hystrix.enabled=true 后则不会进行重试
feign.hystrix.enabled=true
# 会和ribbon同时生效 取较小的值
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=3000
#hystrix.command.IProductService#getPort.fallback.enabled=true
#hystrix.command.IProductService#getPort.execution.timeout=true
# 对制定的方法设置超时时间
hystrix.command.IProductService#getPort().execution.isolation.thread.timeoutInMilliseconds=1000
#指定某个service不进行超时检查
hystrix.command.IProductService#getPort2().execution.timeout.enabled=false
hystrix.command.IProductService#getPort2().execution.isolation.thread.timeoutInMilliseconds=1000

#ribbon的超时时间 会重试一次 hystrix不会
ribbon.ReadTimeout=3000
ribbon.ConnectTimeout=3000
ribbon.eureka.enabled=true


management.endpoints.web.exposure.include=*
management.endpoints.web.base-path=/actuator
